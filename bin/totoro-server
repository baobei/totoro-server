#!/usr/bin/env node

var fs = require('fs')
var commander = require('commander')
var path = require('path')
require('colorful').colorful()

var Contractor = require('../lib/server/server')

var pkgStr = fs.readFileSync(path.join(module.filename, '../../package.json'))
var pkg = JSON.parse(pkgStr)

commander.helpInformation = function() {
    return [
        '',
        '  Server side of totoro.'.to.cyan.color,
        '',
        '  Usage: '.to.green.color,
        '    ' + this._name + ' ' + this.usage(),
        '' + this.commandHelp(),
        '  Options:'.to.green.color,
        '' + this.optionHelp().replace(/^/gm, '    '),
        ''
    ].join('\n')
}

function splitStr(val) {
    return val.split(',')
}

commander
    .usage('[options]')

commander
    .option('-v, --version', 'output the version number')
    .option('--verbose', 'show debug log')
    .option('--serverHost [s]', 'specify server host')
    .option('--serverPort [n]', 'specify server port')
    .option('--insertScripts [s]', 'insert scripts to capture service', splitStr)


commander.on('--help', function() {
    console.log()
    console.log('  ' + 'More info:'.to.green.color)
    console.log('    ' + 'https://github.com/totorojs/totoro-server'.to.underline.color)
    console.log()
});


commander.parse(process.argv)

if (commander.rawArgs.length === 3 && (commander.rawArgs[2] === '-v' ||
        commander.rawArgs[2] === '--version')) {
    console.info(pkg.version)
    process.exit(0)
}

function getCfg(commander) {
    var cfg = {}
    commander.options.forEach(function(item, index, list) {
        var key = item.long.substring(2)
        if(key in commander) {
            cfg[key] = commander[key]
        }
    })
    return cfg
}

new Contractor(getCfg(commander))
